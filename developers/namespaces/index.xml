<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Functions &amp; Namespaces on daochook Documentation</title><link>https://daochook.github.io/developers/namespaces/</link><description>Recent content in Functions &amp; Namespaces on daochook Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://daochook.github.io/developers/namespaces/index.xml" rel="self" type="application/rss+xml"/><item><title>bits</title><link>https://daochook.github.io/developers/namespaces/bits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/bits/</guid><description>This namespace is currently unused.</description></item><item><title>events</title><link>https://daochook.github.io/developers/namespaces/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/events/</guid><description>The events namespace contains functions that are used for working with daochook events.
Functions exposed by this namespace are accessed via the prefix: hook.events.
Functions register Registers a new callback function to the given event.
1boolean hook.events.register(event_name, event_alias, callback_func); Parameter Name Type Description event_name string The name of the event to register this callback to. event_alias string The alias for this callback. callback_func function The function to invoke when the event is raised.</description></item><item><title>extensions</title><link>https://daochook.github.io/developers/namespaces/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/extensions/</guid><description>The extensions namespace is not actually a namespace that is accessible directly. Instead, this namespace is used, internally, to extend the functionality of Lua&amp;rsquo;s base types. (ie. boolean, coroutine, function, number, string, table, etc.)
coroutine Extensions kill Kills the current coroutine.
1coroutine.kill(); Parameter Name Type Description None. Returns None. sleep Yields the current coroutine, sleeping for the given delay of time.
1coroutine.sleep(delay); Parameter Name Type Description delay number The time delay to sleep for.</description></item><item><title>fs (File System)</title><link>https://daochook.github.io/developers/namespaces/filesystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/filesystem/</guid><description>The fs namespace contains functions that are used for working with file system operations. Lua does contain some basic file I/O functionality, but this namespace includes a handful of additional functions that make up for where Lua is lacking.
These file system functions make use of the C++ std::filesystem header. The functions are named the same/similar.
For more information on those functions, please visit: https://en.cppreference.com/w/cpp/filesystem
Functions exposed by this namespace are accessed via the prefix: hook.</description></item><item><title>game</title><link>https://daochook.github.io/developers/namespaces/game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/game/</guid><description>The game namespace contains functions that daochook has either hooked onto, or needed to interact with from within the hook due to either the calling convention being unfriendly with FFI or similar. These are generally wrappers that are just forwarded to Lua, giving addons access to call them.
Functions exposed by this namespace are accessed via the prefix: game.
Functions get_version_mode Returns the internal mode enumeration value that was used to read the games client version information.</description></item><item><title>hook</title><link>https://daochook.github.io/developers/namespaces/hook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/hook/</guid><description>The hook namespace contains functions that directly interact with daochook.
Functions exposed by this namespace are accessed via the prefix: hook.
Functions get_hook_path Returns the path to where daochook is installed.
1string hook.get_hook_path(); Parameter Name Type Description None. Returns (string) The path where daochook is installed. get_hook_base Returns the base address of daochook in the current process.
1number hook.get_hook_base(); Parameter Name Type Description None. Returns (number) The base address of daochook in the current process.</description></item><item><title>imgui</title><link>https://daochook.github.io/developers/namespaces/imgui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/imgui/</guid><description>The imgui namespace contains functions that are used to interact with the ImGui library. daochook offers a [nearly] full implementation of ImGui, adjusted to work nicer with Lua.
Due to how many functions are within ImGui, this documentation may remain &amp;rsquo;lacking&amp;rsquo; for a bit of time. However, some bits of information will be explained to help understand the changes made to the functions in order to make use of them in your addons.</description></item><item><title>memory</title><link>https://daochook.github.io/developers/namespaces/memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/memory/</guid><description>The memory namespace contains functions that allow addons to access the game client memory in multiple ways.
You can also make use of the ffi library to access memory with more features such as casting to actual C style structures.
Functions exposed by this namespace are accessed via the prefix: hook.memory.
Functions get_base Returns the base address of a loaded module.
1number hook.memory.get_base(name); Parameter Name Type Description name string [Optional] The name of the module.</description></item><item><title>misc</title><link>https://daochook.github.io/developers/namespaces/misc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/misc/</guid><description>The misc namespace contains functions that don&amp;rsquo;t fit into their own namespace (either due to what they are for, or not having enough functions of the same type) that help with various things.
Functions exposed by this namespace are accessed via the prefix: hook.misc.
Functions get_clipboard Returns the current string in the clipboard.
1string|nil hook.misc.get_clipboard(); Parameter Name Type Description None. Returns (string | nil) The clipboard string on success, nil otherwise.</description></item><item><title>regex</title><link>https://daochook.github.io/developers/namespaces/regex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/regex/</guid><description>The regex namespace contains functions that allow for more advanced regular expression usage.
These file system functions make use of the C++ std::regex header. The functions are named the same/similar.
For more information on those functions, please visit: https://en.cppreference.com/w/cpp/regex
Functions exposed by this namespace are accessed via the prefix: hook.regex.
Functions match Returns any matches to the given pattern on the given string. (Uses std::regex_match)
1table|nil hook.regex.match(message, pattern, flags); Parameter Name Type Description message string The message to match the pattern within.</description></item><item><title>tasks</title><link>https://daochook.github.io/developers/namespaces/tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/tasks/</guid><description>The tasks namespace contains functions used to run concurrent functions (coroutines). These functions operate similar to Lua&amp;rsquo;s built in coroutines but offer a bit more flexibility on how they work. daochook also extends the built-in coroutine table to include additional functions.
Functions exposed by this namespace are accessed via the prefix: hook.tasks.
Functions once Executes a task once.
1hook.tasks.once(func); Parameter Name Type Description func function The function to execute. Returns None.</description></item><item><title>time</title><link>https://daochook.github.io/developers/namespaces/time/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/time/</guid><description>The time namespace contains functions that offer more precise timing related information. Lua only offers two time related methods by default which don&amp;rsquo;t offer much in regards to precision timing, or other useful time related info.
Functions exposed by this namespace are accessed via the prefix: hook.time.
Functions clock Returns the current high-resolution clock information. (Uses std::chrono::high_resolution_clock::now)
1table hook.time.clock(); Parameter Name Type Description None. Returns (table) Table containing the high-resolution clock information.</description></item></channel></rss>