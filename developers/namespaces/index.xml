<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Functions &amp; Namespaces on daochook Documentation</title><link>https://daochook.github.io/developers/namespaces/</link><description>Recent content in Functions &amp; Namespaces on daochook Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://daochook.github.io/developers/namespaces/index.xml" rel="self" type="application/rss+xml"/><item><title>bits</title><link>https://daochook.github.io/developers/namespaces/bits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/bits/</guid><description>This namespace is currently unused.</description></item><item><title>events</title><link>https://daochook.github.io/developers/namespaces/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/events/</guid><description>The events namespace contains functions that are used for working with daochook events.
Functions exposed by this namespace are accessed via the prefix: hook.events.
Functions register Registers a new callback function to the given event.
boolean hook.events.register(event_name, event_alias, callback_func); Parameter Name Type Description event_name string The name of the event to register this callback to. event_alias string The alias for this callback. callback_func function The function to invoke when the event is raised.</description></item><item><title>extensions</title><link>https://daochook.github.io/developers/namespaces/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/extensions/</guid><description>The extensions namespace is not actually a namespace that is accessible directly. Instead, this namespace is used, internally, to extend the functionality of Lua&amp;rsquo;s base types. (ie. boolean, function, number, string, table, etc.)
table Extensions toliteral Converts the given table of numbers (bytes) to a string literal.
string table.toliteral(table); Parameter Name Type Description table table The table to convert to a string literal. Returns (string) The converted table to a string literal.</description></item><item><title>fs (File System)</title><link>https://daochook.github.io/developers/namespaces/filesystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/filesystem/</guid><description>The fs namespace contains functions that are used for working with file system operations. Lua does contain some basic file I/O functionality, but this namespace includes a handful of additional functions that make up for where Lua is lacking.
These file system functions make use of the C++ std::filesystem header. The functions are named the same/similar.
For more information on those functions, please visit: https://en.cppreference.com/w/cpp/filesystem
Functions exposed by this namespace are accessed via the prefix: hook.</description></item><item><title>game</title><link>https://daochook.github.io/developers/namespaces/game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://daochook.github.io/developers/namespaces/game/</guid><description>The game namespace contains functions that daochook has either hooked onto, or needed to interact with from within the hook due to either the calling convention being unfriendly with FFI or similar. These are generally wrappers that are just forwarded to Lua, giving addons access to call them.
Functions exposed by this namespace are accessed via the prefix: game.
Functions get_version_mode Returns the internal mode enumeration value that was used to read the games client version information.</description></item></channel></rss>